import random

tasks = []

def generate_id():
    return random.randint(1000, 9999)

def add_task():
    name = input("Task Name : ")
    description = input("Description : ")
    status = input("Status (New or Completed) : ").capitalize()
    tag = input("Tag (High or Low) : ").capitalize()

    task = {
        "id": generate_id(),
        "name": name,
        "description": description,
        "status": status,
        "tag": tag
    }

    tasks.append(task)
    print("Task added!")

def search_task():
    criteria = input("Search by ID or Name? ").lower()
    value = input("Enter the value: ")

    for task in tasks:
        if (criteria == "id" and str(task["id"]) == value) or (criteria == "name" and task["name"].lower() == value.lower()):
            print(task)
            return
    print("Task not found.")

def delete_task():
    criteria = input("Delete by ID or Name ? : ").lower()
    value = input("Enter the value : ")

    for i, task in enumerate(tasks):
        if (criteria == "id" and str(task["id"]) == value) or (criteria == "name" and task["name"].lower() == value.lower()):
            del tasks[i]
            print("Task deleted")
            return
    print("Task not found")

def update_task_status():
    criteria = input("Update status by ID or Name? ").lower()
    value = input("Enter the value: ")

    for task in tasks:
        if (criteria == "id" and str(task["id"]) == value) or (criteria == "name" and task["name"].lower() == value.lower()):
            new_status = input("New status (New, Completed): ").capitalize()
            task["status"] = new_status
            print("Status updated.")
            return
    print("Task not found.")

def list_all_tasks():
    if not tasks:
        print("No tasks to show.")
    else:
        for task in tasks:
            print(task)

def filter_tasks():
    tag = input("Filter by Tag (High/Low or leave blank): ").capitalize()
    status = input("Filter by Status (New/Completed or leave blank): ").capitalize()

    filtered = tasks
    if tag:
        filtered = [t for t in filtered if t["tag"] == tag]
    if status:
        filtered = [t for t in filtered if t["status"] == status]

    if filtered:
        for task in filtered:
            print(task)
    else:
        print("No tasks match the filters.")

def show_stats():
    total = len(tasks)
    new_count = len([t for t in tasks if t["status"] == "New"])
    completed_count = len([t for t in tasks if t["status"] == "Completed"])
    high_count = len([t for t in tasks if t["tag"] == "High"])
    low_count = len([t for t in tasks if t["tag"] == "Low"])

    print("Stats:")
    print(f"- Total tasks: {total}")
    print(f"- New tasks: {new_count}")
    print(f"- Completed tasks: {completed_count}")
    print(f"- High priority tasks: {high_count}")
    print(f"- Low priority tasks: {low_count}")

def main_menu():
    while True:
        print("\n========= TO-DO LIST MENU =========")
        print("1 - Add a new Task")
        print("2 - Search for a task by ID or Name")
        print("3 - Delete a given task by ID or Name")
        print("4 - Update Status of a task by ID or Name")
        print("5 - List all tasks")
        print("6 - List using filtering by Tag or Status or together")
        print("7 - Show Stats")
        print("q - Quit")
        print("===================================")

        choice = input("Enter your choice: ").strip().lower()

        if choice == "1":
            add_task()
        elif choice == "2":
            search_task()
        elif choice == "3":
            delete_task()
        elif choice == "4":
            update_task_status()
        elif choice == "5":
            list_all_tasks()
        elif choice == "6":
            filter_tasks()
        elif choice == "7":
            show_stats()
        elif choice == "q":
            print("Goodbye! Thank you for using the To-Do List")
            break
        else:
            print("Invalid choice please try again")

main_menu()
